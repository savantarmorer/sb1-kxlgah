#!/bin/bash

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo "üîç Iniciando valida√ß√£o do ambiente de staging..."

# Verificar se os servi√ßos est√£o rodando
echo -e "\n${YELLOW}Verificando status dos servi√ßos:${NC}"
services=("app" "redis" "monitoring")
for service in "${services[@]}"; do
    if docker-compose -f docker-compose.staging.yml ps | grep -q "$service.*Up"; then
        echo -e "${GREEN}‚úì $service est√° rodando${NC}"
    else
        echo -e "${RED}‚úó $service n√£o est√° rodando${NC}"
        exit 1
    fi
done

# Verificar conex√£o com Supabase
echo -e "\n${YELLOW}Verificando conex√£o com Supabase:${NC}"
curl -s "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/" \
  -H "apikey: $NEXT_PUBLIC_SUPABASE_ANON_KEY" \
  -H "Authorization: Bearer $NEXT_PUBLIC_SUPABASE_ANON_KEY" \
  && echo -e "${GREEN}‚úì Conex√£o com Supabase OK${NC}" \
  || (echo -e "${RED}‚úó Falha na conex√£o com Supabase${NC}" && exit 1)

# Verificar endpoints da API
echo -e "\n${YELLOW}Verificando endpoints principais:${NC}"
endpoints=("/api/health" "/api/tournaments" "/api/matches")
for endpoint in "${endpoints[@]}"; do
    response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:3000$endpoint")
    if [ "$response" == "200" ]; then
        echo -e "${GREEN}‚úì $endpoint est√° respondendo${NC}"
    else
        echo -e "${RED}‚úó $endpoint retornou $response${NC}"
        exit 1
    fi
done

# Verificar m√©tricas
echo -e "\n${YELLOW}Verificando m√©tricas:${NC}"
if curl -s "http://localhost:3000/metrics" | grep -q "tournament_"; then
    echo -e "${GREEN}‚úì M√©tricas est√£o sendo coletadas${NC}"
else
    echo -e "${RED}‚úó M√©tricas n√£o encontradas${NC}"
    exit 1
fi

echo -e "\n${GREEN}‚úÖ Valida√ß√£o conclu√≠da com sucesso!${NC}" 